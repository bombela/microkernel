/* vim: ft=cpp
 * forward
 * Copyright © 2010 François-Xavier 'Bombela' Bourlet <bombela@gmail.com>
 *
*/

#pragma once
#ifndef FORWARD_H
#define FORWARD_H

namespace std {
namespace kernel_std {

template <typename T>
struct remove_ref
{
   	typedef T type;	
};

template <typename T>
struct remove_ref<T&>
{
   	typedef T type;
};

template <typename T>
struct remove_ref<T&&>
{
   	typedef T type;
};

template <typename T>
T&& forward(typename remove_ref<T>::type& arg) {
	return static_cast<T&&>(arg);
}

} // namespace kernel_std
} // namespace std

#endif /* FORWARD_H */
