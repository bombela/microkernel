/* vim: ft=cpp
 * Local Variables:
 * mode:c++
 * End:
 * iomanip
 * Copyright © 2010 François-Xavier 'Bombela' Bourlet <bombela@gmail.com>
 *
*/

#pragma once
#ifndef IOMANIP_H
#define IOMANIP_H

#include <kernel/std/bits/config.h>
#include <kernel/std/ostream>
#include <kernel/std/formatter>

namespace std {
namespace kernel_std {

inline std::ostream& operator<<(std::ostream& os, std::numbase nb) {
	os.flags.setbase(nb);
	return os;
}

inline std::ostream& operator<<(std::ostream& os, std::color c) {
	os.setcolor(c);
	return os;
}

template <typename... Args>
inline constexpr formatter::formatter<std::ostream,
formatter::arg_printer::simple, Args...> format(
	   const char* fmt, const Args&... args) {
   return formatter::mkformatter<std::ostream,
	   formatter::arg_printer::simple>(fmt, args...);
}

} // namespace kernel_std
} // namespace std

#endif /* IOMANIP_H */
